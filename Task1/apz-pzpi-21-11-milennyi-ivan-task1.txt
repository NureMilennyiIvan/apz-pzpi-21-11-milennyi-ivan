1 БІЗНЕС-ВИМОГИ
1.1 Передумови

Сучасні фермерські господарства стикаються зі зростаючими вимогами до ефективного контролю за тваринами та управління ресурсами. Це стосується також і вовняних ферм, де важливо забезпечити високий рівень догляду за вівцями для отримання якісної продукції. Підвищення ефективності процесів, зниження витрат та покращення якості продукції стають ключовими завданнями для таких господарств.
Потреба у моніторингу стану тварин на вовняних фермах стає все більш актуальною. Наявність точної інформації про стан здоров'я та як тварина доглядається є критично важливою для забезпечення успішної роботи ферми. Це дозволяє не лише покращити догляд за тваринами, але й оптимізувати виробничі процеси.
Автоматизація контролю за процесами також сприяє значному зменшенню ручної праці та помилок, що виникають через людський фактор. Використання сучасних технологій дозволяє фермерським господарствам відстежувати та контролювати всі аспекти управління фермами в реальному часі. Це включає моніторинг здоров'я тварин, оптимізацію графіку годівлі та стрижки, а також забезпечення належних умов утримання. Завдяки цьому, фермери можуть своєчасно вживати необхідних заходів для запобігання захворюванням та інших проблем, що позитивно впливає на продуктивність та рентабельність господарства.
Основна мета розробки програмної системи автоматизації керування вовняною фермою полягає у створенні ефективного інструменту для збору, аналізу та візуалізації даних щодо стану здоров'я овець, умов утримання, годування та інших важливих параметрів. Ця система покликана забезпечити широку доступність та зрозумілість інформації для фермерів, що дозволить їм приймати обґрунтовані рішення та розробляти стратегії для покращення ефективності роботи ферми та якості продукції.

1.2 Бізнес-можливості

Система для контролю роботи вовняної ферми відкриває широкі можливості для оптимізації та контролю над фермерськими процесами, що забезпечує підвищення ефективності та якості продукції вовняних ферм.
У порівнянні з такими конкурентами, як FarmIQ та Shearwell Data, розроблюєма програмна система має кілька ключових переваг. По-перше, головною перевагою є можливість менеджменту та обліку ресурсів ферми, здебільшого кормів. По-друге розроблюєма система буде мати зручний та інтуітивно зрозумілий інтерфейс, який полегшить використання навіть для користувачів без технічного досвіду. 
Модель монетизації  системи може включати в себе різні підходи, такі як різні плани платних підписок для малих, середніх та великих вовняних ферм, які бажають спростити контроль за своїми процесами, підвищіти продуктивність та якість продукції. Також для клієнтів, які вже користуються системою тривалий час, можна зробити послугу з надання спеціаліста, який на основі зібраних даних зможе допомогти налаштувати та оптимізувати фермерські процеси.
Цільова аудиторія – це власники вовняних ферм, які шукають способи покращити продуктивність та ефективність свого господарства, а також їх підлеглі які будуть використовувати систему під час роботи. З урахуванням зростаючої уваги до ефективного управління фермерськими господарствами та покращення якості продукції, розроблюєма система може стати важливим інструментом для досягнення цих цілей та підвищення рентабельності вовняних ферм.

2 КОНЦЕПЦІЯ РІШЕННЯ
2.1 Окреслення концепції

Мета цього проекту полягає у створенні програмного продукту для автоматизації керування вовняною фермою. Система спрямована на надання фермерам точної та систематичної інформації про стан овець, умови утримання, догляд, ресурси ферми, що дозволить їм оптимізувати фермерські процеси та покращити якість продукції. Цільова аудиторія системи включає власників вовняних ферм та їх робітників.
Впровадження програмної системи автоматизації керування вовняною фермою надасть можливість отримувати достовірну інформацію про стан овець та інші важливі параметри, що буде корисним для прийняття рішень з покращення ефективності роботи ферми та якості продукції. Система дозволить фермерам своєчасно виявляти та вирішувати проблеми, що позитивно вплине на рентабельність господарства. 
Програмний продукт дозволить оптимізувати контроль за процесами на фермі, що допоможе фермерам приймати обґрунтовані рішення та розробляти стратегії для покращення ефективності своїх господарств. Також це допоможе звичайним робітникам ферми виконувати свої обов’язки швидше та краще. 
Додатково, система забезпечить прозорість та покращить комунікацію між працівниками ферми, що дозволить ефективніше координувати дії та зменшити ризики людських помилок. Інтеграція сучасних технологій у щоденну діяльність ферми сприятиме підвищенню рівня продуктивності та загального добробуту господарства.

2.2 Головна функціональність

Основна функціональність системи:
MF-1: Моніторинг температури вівці – система здатна вимірювати температуру тіла вівці;
MF-2: Розрахування графіку годування вівці;
MF-3: Розрахування графіку стрижки вівці;
MF-4: Розрахування кількості корму для вівці;
MF-5: Функція авторизації вівчаря у мобільному додатку та веб-клієнті системи;
MF-6: Вівчар зможе переглядати овець, які за ним закріплені;
MF-7: Вівчар зможе переглядати існуючі породи та інформацію про них; 
MF-7: Вівчар зможе переглядати існуючі корма та інформацію про них; 
MF-8: Вівчар зможе переглядати деталі про кожну з овець, які за ним закріплені;
MF-9: Вівчар зможе робити відмітки про стрижку вівці;
MF-10: Вівчар зможе робити відмітку про годування вівці;
MF-11: Вівчар зможе переглядати записи про годування вівці;
MF-12: Вівчар зможе переглядати записи про стрижки вівці;
MF-13: Вівчар зможе сканувати QR-кодів для швидкого доступу до інформації про вівцю;
MF-13: Функція надсилання повідомлення вівчарю про необхідність погодувати вівцю;
MF-14: Функція надсилання повідомлення вівчарю про необхідність підстригти вівцю;
MF-15: Функція авторизації комірника у мобільному додатку та веб-клієнті системи;
MF-16: Комірник зможе переглядати всі існуючі корма та інформацію про них;
MF-17: Комірник зможе бачити записи витрат корму фермою;
MF-18: Комірник зможе бачити записи постачань корму на ферму;
MF-19: Комірник зможе відмічати нові постачання корму на ферму;
MF-20: Адміністратор зможе закріплювати овець за вівчарями;
MF-21: Адміністратор зможе закріплювати сканери температури за вівцями;
MF-22: Адміністратор зможе робити CRUD операції із породами;	
MF-23: Адміністратор зможе робити CRUD операції із вівцями;
MF-24: Адміністратор зможе робити CRUD операції із вівчарями;
MF-25: Адміністратор зможе робити CRUD операції із кормами;
MF-26: Адміністратор зможе робити CRUD операції із комірниками;
MF-27: Адміністратор зможе робити CRUD операції із сканерами температури.

3 РАМКИ ТА ОБМЕЖЕННЯ ПРОЄКТУ
3.1 Рамки первинного випуску

Програмне забезпечення серверної частини системи:
• сервер повинен мати графічний інтерфейс для адміністрування, тестування та обслуговування;
• сервер повинен забезпечити зберігання даних вівчарів, комірників, кормів, порід, овець, сканерів температури, графіків годувань та стрижок, постачання кормів;
• сервер повинен мати змогу працювати із сканерами температури для оновлення температури овець;
• сервер повинен надавати інструменти адміністрування та обслуговування.
Програмне забезпечення пристроя IoT:
• збір даних про температуру вівці;
• відправка зібраних даних на сервер.
Веб застосунок:
• авторизації: змогу авторизуватись будуть мати вівчарі, комірники та адміністратор;
• сторінка адміністратора, використовуючи яку, адміністратор зможе маніпулювати всіма даними системи;
• підтримка двох мов, а саме українська та англійська локалізації;
• перегляд вівчарем даних про овець які за ним закріплені. Вівчар зможе переглядати таку інформацію як номер вівці, порода, дати останнього годування та стрижки;
 • перегляд вівчарем даних про корма. Вівчар зможе переглядати таку інформацію як назва корму, кількість корму на складі, калорійність, вміст жирів, білків та вуглеводів, назву породи яка споживає цей корм та кількість овець;
• перегляд вівчарем даних про породи. Вівчар зможе переглядати таку інформацію як назва породи, назва корму для цією породи, кількість овець та інформацію;
• перегляд вівчарем детальних даних про вівцю. Вівчар зможе переглядати таку інформацію як номер вівці, порода, інформацію про породу, стать, вік у днях, вага, назва корму, необхідна кількість корму для годування, доступна кількість корму, дати останнього годування та стрижки, температура, потреби у годуванні та стрижці;
• додавання вівчарем звіту про годування вівці. Функція, що дозволяє вівчарям зберігати інформацію про час годування, виконавця та кількість використаного корму;
• додавання вівчарем звіту про стрижку вівці. Функція, що дозволяє вівчарям зберігати інформацію про час стрижки, виконавця та кількість отриманої вовни;
• перегляд вівчарем записів про годування вівці. Вівчар зможе переглядати таку інформацію як номер запису, номер вівці, ім’я та прізвище виконавця, кількість використаного корму та дату годування;
• перегляд вівчарем записів про стрижку вівці. Вівчар зможе переглядати таку інформацію як номер запису, номер вівці, ім’я та прізвище виконавця, кількість отриманої вовни та дату годування;
• перегляд комірником всіх видів кормів, які є на фермі. Комірник зможе переглядати таку інформацію як назва корму, кількість корму на складі, назву породи, яка споживає цей корм та кількість овець;
• перегляд комірником записів про годування овець обраним кормом. Комірник зможе переглядати таку інформацію як номер запису, номер вівці, ім’я та прізвище виконавця, кількість використаного корму та дату годування;
• перегляд комірником інформацію про постачання обраного корму. Комірник зможе переглядати таку інформацію як номер постачання, ім’я та прізвище виконавця, кількість отриманого корму та дату постачання;
• додавання комірником постачання корму.
Програмний застосунок для мобільного пристроя:
• авторизації: змогу авторизуватись будуть мати вівчарі та комірники;
• сканування QR-коду на загоні з вівцею для швидкого отримання детальної інформацію про вівцю;
• перегляд вівчарем детальних даних про вівцю. Вівчар зможе переглядати таку інформацію як номер вівці, порода, інформацію про породу, стать, вік у днях, вага, назва корму, необхідна кількість корму для годування, доступна кількість корму, дати останнього годування та стрижки, температура, потреби у годуванні та стрижці;
• додавання вівчарем звіту про годування вівці. Функція, що дозволяє вівчарям зберігати інформацію про час годування, виконавця та кількість використаного корму;
• додавання вівчарем звіту про стрижку вівці. Функція, що дозволяє вівчарям зберігати інформацію про час стрижки, виконавця та кількість отриманої вовни;
• надсилання повідомлень вівчарям про необхідність погодувати або підстригти вівцю;
• перегляд комірником всіх видів кормів, які є на фермі. Комірник зможе переглядати таку інформацію як назва корму, кількість корму на складі, назву породи, яка споживає цей корм та кількість овець;
• додавання комірником постачання корму.

3.2 Рамки наступних випусків

Функції, які плануються реалізувати у майбутньому:
• розширення функціоналу для комірника шляхом додавання модулю управління запасами ветеренарних препаратів;
• система попередження про можливе захворювання вівці, яка буде використовувати дані з IoT сенсорів.

4 БІЗНЕС-КОНТЕКСТ
4.3 Робоче середовище

Серверна частина буде розроблена за допомогою мови програмування Rust та фреймворку Actix Web, який надає інструменти для розробки REST API. Для розгортання сервера буде використовуватись Docker та Azure Container Registry. Для збереження  даних та маніпулювання ними, була обрана система управління базами даних MySQL. Для розгортання бази даних також буде використовуватись Microsoft Azure.
Для створення веб-клієнта буде використовуватись мова програмування TypeScript та його фреймворк React. Для надання сайту гарного зовнішнього вигляду будуть використовуватись каскадні таблиці стилів CSS. Для розгортання сайту буде використовуватись хмарна платформа Netlify. 
Для мобільного додатку буде використовуватись мова програмування Kotlin. Додаток планується під платформу Android.
IoT застосунок, буде розроблений з використанням мови програмування Rust.
Основні вимоги:
• система повинна стабільно функціонувати цілодобово, та бути доступною для робітників підприємств;
• архітектура системи, яка дозволить легко її підтримувати, оновлювати та додавати нові функції;
• оптимізація системи з метою функціонування під великими навантаженнями;
• забезпечення приватності за допомогою шифрування та засобів обмеження доступу.
